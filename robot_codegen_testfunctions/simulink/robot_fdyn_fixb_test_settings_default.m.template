% Settings to start the forward dynamics model (fixed base)
% called by %RN%_fdyn_fixb_test_start.m

% Moritz Schappler, schappler@irt.uni-hannover.de, 2016-05
% (c) Institut für Regelungstechnik, Universität Hannover

NQJ = %NQJ%;
NJ = %NJ%;
NL = %NL%;
robot_name = '%RN%';

%% Init
% Parameter

%RN%_varpar_testfunctions_parameter
if strcmp(ParameterModus, 'mp')
  MPV = %RN%_convert_par2_MPV(alpha, a, d, q_offset, b, beta, ...
    m, mrSges, Ifges);
end
KinPar_mdh = struct('a', a, 'd', d, 'alpha', alpha, ...
  'q_offset', q_offset, 'b', b, 'beta', beta, 'v', NaN(NJ,1), 'kintmp', kintmp);
DynPar1 = struct('m', m, 'r_S', rSges, 'I_S', Icges);


%% Anfangswerte
q_t0 = zeros(NQJ,1);
qD_t0 = rand(NQJ,1)*10;
g_base = [0;0;-9.81];

%% Dämpfung
d = zeros(NQJ,1);

%% Simulink-Eingangsdaten
  
simin_tau_ext = struct('time', 0, ...
    'signals', struct('values', zeros(1,NQJ), 'dimensions', NQJ), ...
    'name', 'tau_ext');
  
simin_tau_m = struct('time', 0, ...
    'signals', struct('values', zeros(1,NQJ), 'dimensions', NQJ), ...
    'name', 'tau_m');
  
%% Configure Model
if strcmp(ParameterModus, 'vp1')
  sl_Modellname = '%RN%_fdyn_fixb_test_vp1';
elseif strcmp(ParameterModus, 'mp')
  sl_Modellname = '%RN%_fdyn_fixb_test_mp_vp';
else
  error('ParameterModus nicht definiert');
end
load_system(sl_Modellname)
configSet = getActiveConfigSet(sl_Modellname);
set_param(configSet, 'Solver', 'ode4');
set_param(configSet, 'FixedStep', '1e-4');
