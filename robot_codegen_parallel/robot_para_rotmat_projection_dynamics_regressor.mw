<?xml version="1.0" encoding="UTF-8"?>
<Worksheet>
<Version major="2024" minor="0"/>
<Label-Scheme value="2" prefix=""/>
<View-Properties presentation="false" autoexpanding_sections="true" UserProfileName="Maple Default Profile" NumericFormat-ApplyInteger="true" NumericFormat-ApplyRational="true" NumericFormat-ApplyExponent="false" editable="true">
</View-Properties>
<MapleNet-Properties prettyprint="3" warnlevel="3" compactdisplay="false" preplot="" helpbrowser="standard" displayprecision="-1" echo="1" scientificx="true" unitattributes="&quot;fontweight&quot; = &quot;bold&quot;" imaginaryunit="I" longdelim="true" elisiontermsthreshold="10000" elisiondigitsafter="100" elisiondigitsbefore="100" plotdevice="inline" errorbreak="1" plotoptions="" plotdriver="opengl" quiet="false" elisiontermsbefore="100" elisiontermsafter="100" historytimestamp="false" screenwidth="79" indentamount="4" plotoutput="terminal" screenpixelheight="1080" rtablesize="100" useclientjvm="true" format="worksheet" labelwidth="20" postplot="" typesetting="extended" ansi="false" ansicolor="[]" elisiondigitsthreshold="10000" showassumed="1" ansilprint="false" trailingsemicolon="true" errorcursor="false" labelling="true" screenheight="25" prompt="&gt; " verboseproc="1" latexwidth="8.0" ShowLabels="true"/>
<Styles>
<Font name="Heading 1" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Warning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="2D Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Heading 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Line Printed Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Heading 2" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="16" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Maple Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="2D Inert Output" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[144,144,144]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Heading 3" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="14" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Diagnostic" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[40,120,40]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Ordered List 1" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Maple Input" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[120,0,14]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Text Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Ordered List 2" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Ordered List 3" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Ordered List 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Ordered List 5" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Annotation Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Header and Footer" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="10" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="HyperlinkError" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" strikethrough="false" placeholder="false"/>
<Font name="Atomic Variable" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[175,0,175]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="HyperlinkWarning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" strikethrough="false" placeholder="false"/>
<Font name="Dictionary Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[147,0,15]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" strikethrough="false" placeholder="false"/>
<Font name="2D Math" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Bullet Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Maple Plot" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Annotation Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="List Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Dash Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="2D Input" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Error" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Normal" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Caption Reference" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Code" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Maple Input Placeholder" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[200,0,200]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="true"/>
<Font name="Equation Label" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Author" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Font name="Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,128,128]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" strikethrough="false" placeholder="false"/>
<Font name="Caption Text" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" strikethrough="false" placeholder="false"/>
<Layout name="Heading 1" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="4" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Warning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 4" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Line Printed Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 2" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="2" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Output" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.3" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 3" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Diagnostic" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Ordered List 1" alignment="left" bullet="numeric" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Text Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="newline" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Ordered List 2" alignment="left" bullet="alphabetic" firstindent="0" leftmargin="36" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Ordered List 3" alignment="left" bullet="roman" firstindent="0" leftmargin="72" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Ordered List 4" alignment="left" bullet="ALPHABETIC" firstindent="0" leftmargin="108" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Ordered List 5" alignment="left" bullet="ROMAN" firstindent="0" leftmargin="144" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Annotation Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkError" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkWarning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Bullet Item" alignment="left" bullet="dot" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Plot" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="List Item" alignment="left" bullet="indent" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Dash Item" alignment="left" bullet="dash" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Error" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Normal" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Author" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="8" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Pencil-style name="Pencil 1" pen-color="[0,0,0]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 2" pen-color="[0,0,255]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 3" pen-color="[0,0,0]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 4" pen-color="[0,0,255]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 5" pen-color="[255,0,0]" pen-height="5.0" pen-width="5.0" pen-opacity="1.0"/>
<Highlighter-style name="Highlighter 5" pen-color="[255,255,0]" pen-height="48.0" pen-width="48.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 3" pen-color="[51,255,0]" pen-height="24.0" pen-width="24.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 4" pen-color="[0,255,255]" pen-height="32.0" pen-width="32.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 1" pen-color="[255,153,255]" pen-height="12.0" pen-width="8.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 2" pen-color="[255,204,0]" pen-height="14.0" pen-width="14.0" pen-opacity="0.8"/>
</Styles>
<Startup-Code startupcode=""/>
<Task-table>
	<Task-category name="&lt;default&gt;"/>
</Task-table>
<Task/>
<Group labelreference="L3170" drawlabel="true">
<Input><Text-field style="Title" layout="Title">Berechnung und Projektion der Dynamikgleichungen in Regressorform</Text-field>
</Input>
</Group>
<Group labelreference="L3146" drawlabel="true">
<Input><Text-field style="Heading 2" layout="Heading 2">Einleitung</Text-field><Text-field style="Normal" layout="Normal">Berechnung und Projektion der Dynamikgleichungen in Regressorform

Dateiname:
<Font encoding="UTF-8">robot -&gt; Berechnung f\303\274r allgemeinen Roboter
para -&gt; Berechnung f\303\274r einen parallelen Roboter</Font>
rotmat -&gt; Kinematik wird mit Rotationsmatrizen berechnet</Text-field><Text-field style="Normal" layout="Normal">projection -&gt; Die Dynamikgleichungen werden auf EE-Koordinaten projiziert
dynamics -&gt; Berechnung der Dynamik
regressor -&gt; Regressorform (parameterlinear)</Text-field><Text-field style="Normal" layout="Normal"></Text-field><Text-field style="Heading 2" layout="Heading 2">TODO</Text-field><Text-field style="Normal" layout="Normal"><Font encoding="UTF-8">Die Regressorform ist noch nicht in Minimaldarstellung. Au\303\237erdem treten Dynamikparameter auf, die bei reduzierten EE-FG (z.B. 2T1R-Bewegung) keinen Einfluss haben.</Font></Text-field><Text-field style="Normal" layout="Normal"></Text-field>
</Input>
</Group>
<Group labelreference="L3151" drawlabel="true">
<Input><Text-field style="Heading 2" layout="Heading 2">Autor</Text-field><Text-field style="Normal" layout="Normal">Tim Job (Studienarbeit bei Moritz Schappler), 2018-12
Moritz Schappler, moritz.schappler@imes.uni-hannover.de
<Font encoding="UTF-8">(C) Institut f\303\274r Mechatronische Systeme, Universit\303\244t Hannover</Font></Text-field>
</Input>
</Group>
<Group labelreference="L3167" drawlabel="true">
<Input><Text-field style="Heading 2" layout="Heading 2">Sources</Text-field><Text-field style="Normal" layout="Normal">[GautierKhalil1990] Direct Calculation of Minimum Set of Inertial Parameters of Serial Robots
[KhalilDombre2002] Modeling, Identification and Control of Robots
[Ortmaier2014] Vorlesungsskript Robotik I
<Font encoding="UTF-8">[Job2018_S759] Job, T. (Studienarbeit; Betreuer Moritz Schappler): Implementierung einer strukturunabh\303\244ngigen Dynamikmodellierung f\303\274r parallelkinematische Maschinen (2018)</Font></Text-field>
</Input>
</Group>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Initialization</Text-field></Title>
<Group labelreference="L3398" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font encoding="UTF-8">interface(warnlevel=0): # Unterdr\303\274cke die folgende Warnung.
restart: # Gibt eine Warnung, wenn \303\274ber Terminal-Maple mit read gestartet wird.
</Font>interface(warnlevel=3):</Text-field>
</Input>
</Group>
<Group labelreference="L3208" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">interface(rtablesize=100):</Text-field>
</Input>
</Group>
<Group labelreference="L3168" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">with(LinearAlgebra):
with(codegen):
with(CodeGeneration):
<Font encoding="UTF-8">with(StringTools): # F\303\274r Zeitausgabe</Font></Text-field>
</Input>
</Group>
<Group labelreference="L3205" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Einstellungen f\303\274r Code-Export: Optimierungsgrad (2=h\303\266chster) und Aktivierung jedes Terms.</Font></Text-field>
</Input>
</Group>
<Group labelreference="L3191" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">#codegen_act := true: # noch nicht implementiert
codegen_opt := 2:
codeexport_invdyn := true:
<Font encoding="UTF-8">codeexport_actcoord := false: # Generierung der Dynamik in Antriebskoordinaten nicht standardm\303\244\303\237ig (hoher Rechenaufwand)</Font></Text-field>
</Input>
</Group>
<Group labelreference="L3418" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">read &quot;../helper/proc_MatlabExport&quot;:
read &quot;../helper/proc_simplify2&quot;:</Text-field>
</Input>
</Group>
<Group labelreference="L3480" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Roboter-Definitionen laden</Text-field>
</Input>
</Group>
<Group labelreference="L3177" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">read &quot;../robot_codegen_definitions/robot_env_par&quot;:</Text-field>
</Input>
</Group>
<Group labelreference="L3138" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">read sprintf(&quot;../codeexport/%s/tmp/tree_floatb_definitions&quot;, leg_name):
read &quot;../robot_codegen_definitions/robot_env_par&quot;:</Text-field>
</Input>
</Group>
<Group labelreference="L3581" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Es ist in diesem Arbeitsblatt m\303\266glich, zwei verschiedene Regressoren zu generieren und zu exportieren: Basierend auf Minimalparametern und auf vollem Parametersatz (PV2).</Font></Text-field><Text-field style="Text" layout="Normal">Der Term &quot;regressor&quot; oder &quot;regressor_minpar&quot; ist jeweils in den Dateinamen enthalten.
Der folgende Befehl muss immer auf &quot;regressor_minpar&quot; gesetzt sein, da diese Zeile durch das Skript robot_codegen_maple_preparation.sh ausgewertet und modifiziert wird.</Text-field>
</Input>
</Group>
<Group labelreference="L3582" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">regressor_modus := &quot;regressor_minpar&quot;: </Text-field>
</Input>
</Group>
<Group labelreference="L3580" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Term-Vereinfachungen konfigurieren</Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3612" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion32" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">if not assigned(simplify_options) or simplify_options(10)=-1 then # Standard-Einstellungen:
  use_simplify := 1: # standardm\303\244\303\237ig simplify-Befehle anwenden
else # Benutzer-Einstellungen:
  use_simplify := simplify_options(10): # zehnter Eintrag ist f\303\274r Dynamik-Regressor
end if:</EC-CodeEditor></CodeEditor-ExecGroup>
<Group labelreference="L3197" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Ergebnisse der Plattform-Dynamik in Regressorform laden (dort noch keine Minimaldarstellung m\303\266glich, da nur Plattform-Starrk\303\266rper)</Font></Text-field>
</Input>
</Group>
<Group labelreference="L3570" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3572" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion29" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">dynamicsfile := sprintf(&quot;../codeexport/%s/tmp/floatb_%s_platform_dynamic_reg_maple.m&quot;, robot_name, base_method_name):
if FileTools[Exists](dynamicsfile) then
  read dynamicsfile:
else
  printf(&quot;%s. Plattform-Dynamik (Regressor) konnte nicht geladen werden. Abbruch der Berechnung.\134n&quot;, FormatTime(&quot;%Y-%m-%d %H:%M:%S&quot;)):
  quit: # Funktioniert in GUI nicht richtig...
  robot_name := &quot;&quot;: # ...Daher auch L\303\266schung des Roboternamens.
end if:
# Neu-Definieren, damit Variablen im Workspace auftauchen
paramVecP := paramVecP:
paramVecP_M := paramVecP_M:
A_E := A_E:
H := H:
dH := dH:
M_regmin := M_regmin:
c_regmin := c_regmin:
g_regmin := g_regmin:
</EC-CodeEditor></CodeEditor-ExecGroup>
<Group labelreference="L3301" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Ergebnisse der Dynamik der Gelenkkette in Regressorform laden</Text-field>
</Input>
</Group>
<Group labelreference="L3574" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3576" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion30" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">dynamicsfile := sprintf(&quot;../codeexport/%s/tmp/invdyn_%s_%s_maple.m&quot;, leg_name, &quot;fixb&quot;, regressor_modus):
if FileTools[Exists](dynamicsfile) then
  read dynamicsfile:
else
  printf(&quot;%s. PKM-Dynamik konnte nicht geladen werden. Abbruch der Berechnung.\134n&quot;, FormatTime(&quot;%Y-%m-%d %H:%M:%S&quot;)):
  quit: # Funktioniert in GUI nicht richtig...
  robot_name := &quot;&quot;: # ...Daher auch L\303\266schung des Roboternamens.
end if:
tau_regressor_s := tau_regressor_s:
tauMM_regressor_s := tauMM_regressor_s:
MMjj_regressor_s := MMjj_regressor_s:
tauC_regressor_s := tauC_regressor_s:
taug_regressor_s := taug_regressor_s:
read &quot;../robot_codegen_definitions/robot_env_par&quot;:
</EC-CodeEditor></CodeEditor-ExecGroup>
<Group labelreference="L3578" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
<Group labelreference="L3303" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Ergebnisse des Minimalparametervektors der Gelenkkette laden</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L3304" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">if regressor_modus = &quot;regressor_minpar&quot; then
  read sprintf(&quot;../codeexport/%s/tmp/minimal_parameter_vector_fixb_maple&quot;, leg_name):
  Paramvec2 := Paramvec2:
else
  Paramvec2:=Matrix(PV2_vec[11..10*NL,1]):
end if:</Text-field>
</Input>
</Group>
<Group labelreference="L3419" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font encoding="UTF-8">read &quot;../robot_codegen_definitions/robot_env_par&quot;: # Nochmal laden, um Standard-Einstellungen \303\274berschreiben zu k\303\266nnen.</Font></Text-field>
</Input>
</Group>
<Group labelreference="L3264" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Ergebnisse der zus\303\244tzlichen Definitionen f\303\274r parallele Roboter laden</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L3258" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">read sprintf(&quot;../codeexport/%s/tmp/para_definitions&quot;, robot_name):</Text-field>
</Input>
</Group>
<Group labelreference="L3165" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">printf(&quot;Generiere Parameterlineare <Font encoding="UTF-8">Form der Dynamik f\303\274r PKM %s mit </Font>regressor_modus=<Font encoding="UTF-8">%s\134n</Font>&quot;, robot_name, regressor_modus):</Text-field>
</Input>
</Group>
<Group labelreference="L3400" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Lade &quot;robotics_repo_path&quot;-File mit Link zum &quot;imes-robotics-matlab&quot;-Repo</Text-field>
</Input>
</Group>
<Group labelreference="L3401" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">read(&quot;../robotics_repo_path&quot;):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L3399" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Lade die Funktionen aus dem &quot;imes-robotics-matlab&quot;-Repo</Text-field>
</Input>
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">read(sprintf(&quot;%s/transformation/maple/proc_eul%s2r&quot;, robotics_repo_path, angleConvLeg)):
read(sprintf(&quot;%s/transformation/maple/proc_eul%sjac&quot;, robotics_repo_path, &quot;zyx&quot;)):</Text-field>
</Input>
</Group>
<Group labelreference="L3613" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1"><Font encoding="UTF-8">Berechne Dynamik-Matrizen f\303\274r alle Beine</Font></Text-field></Title>
<Group hide-input="false" labelreference="L3253" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input>
</Input>
</Group>
<Group labelreference="L3365" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Alle Basisgeschwindigkeiten und -winkel aus Berechnung der seriellen Kette zu null setzen.</Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3567" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion28" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">omegaxs_base := 0:
omegays_base := 0:
omegazs_base := 0:
alphaxs_base := 0:
betays_base := 0:
gammazs_base := 0:
vxs_base := 0:
vys_base := 0:
vzs_base := 0:
alphaDx_base := 0:
betaDy_base := 0:
gammaDz_base := 0:
vDxs_base := 0:
vDys_base := 0:
vDzs_base := 0:
alphaDDx_base := 0:
betaDDy_base := 0:
gammaDDz_base := 0:
</EC-CodeEditor></CodeEditor-ExecGroup>
<Group labelreference="L3470" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
<Group labelreference="L3372" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Ergebnisse der Kinematik f\303\274r parallelen Roboter laden</Font></Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3597" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion31" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">kinematicsfile := sprintf(&quot;../codeexport/%s/tmp/kinematics_%s_platform_maple.m&quot;, robot_name, base_method_name):
if FileTools[Exists](kinematicsfile) then
  read kinematicsfile:
else
  printf(&quot;%s. PKM-Kinematik konnte nicht geladen werden. Abbruch der Berechnung.\134n&quot;, FormatTime(&quot;%Y-%m-%d %H:%M:%S&quot;)):
  quit: # Funktioniert in GUI nicht richtig...
  robot_name := &quot;&quot;: # ...Daher auch L\303\266schung des Roboternamens.
end if:
# Variablen neu laden
pivotMat := pivotMat:
pivotMatMas := pivotMatMas:
P_i := P_i:
Jinv := Jinv:
JB_i := JB_i:
JBD_i := JBD_i:
JBinv_i := JBinv_i:
JBDinv_i := JBDinv_i:
U_i := U_i:
UD_i := UD_i:
</EC-CodeEditor></CodeEditor-ExecGroup>
<Group hide-input="false" labelreference="L3394" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Dynamik-Parameter f\303\274r virtuelle Segmente nach den Plattform-Koppelgelenken entfernen</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L3472" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">NQ := NQ - (NQJ-NQJ_parallel):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L3441" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Paramvec3:=Paramvec2: # Dynamik-Minimalparametervektor der Beinkette</Text-field>
</Input>
</Group>
<Group labelreference="L3652" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3465" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion14" expanded="true" visible="true" pixel-width="500" pixel-height="424" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">for i from NQJ_parallel+1 to NQJ do
  Paramvec3 := subs({XXC||i = 0}, Paramvec3):
  Paramvec3 := subs({XYC||i = 0}, Paramvec3):
  Paramvec3 := subs({XZC||i = 0}, Paramvec3):
  Paramvec3 := subs({YYC||i = 0}, Paramvec3):
  Paramvec3 := subs({YZC||i = 0}, Paramvec3):
  Paramvec3 := subs({ZZC||i = 0}, Paramvec3):
  Paramvec3 := subs({XX||i  = 0}, Paramvec3):
  Paramvec3 := subs({XY||i  = 0}, Paramvec3):
  Paramvec3 := subs({XZ||i  = 0}, Paramvec3):
  Paramvec3 := subs({YY||i  = 0}, Paramvec3):
  Paramvec3 := subs({YZ||i  = 0}, Paramvec3):
  Paramvec3 := subs({ZZ||i  = 0}, Paramvec3):
  Paramvec3 := subs({SX||i  = 0}, Paramvec3):
  Paramvec3 := subs({SY||i  = 0}, Paramvec3):
  Paramvec3 := subs({SZ||i  = 0}, Paramvec3):
  Paramvec3 := subs({MX||i  = 0}, Paramvec3):
  Paramvec3 := subs({MY||i  = 0}, Paramvec3):
  Paramvec3 := subs({MZ||i  = 0}, Paramvec3):
  Paramvec3 := subs({M||i   = 0}, Paramvec3):
end do:</EC-CodeEditor></CodeEditor-ExecGroup>
<Group hide-input="false" labelreference="L3483" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Paramvec2: # Bein-Dynamik-Parametervektor vor Vereinfachungen</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L3482" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Paramvec3: # Bein-Dynamik-Parametervektor nach Vereinfachungen</Text-field>
</Input>
</Group>
<Group labelreference="L3660" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">PV2_Plf_vec: # Plattform-Dynamik-Parametervektor, ohne Zusammenfassung und ohne Vereinfachung durch Benutzereingabe; aus para_definitions.</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L3487" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">paramVecP: # Plattform-Dynamik-Parametervektor ohne Zusammenfassungen</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L3486" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">paramVecP_M: # Plattform-Dynamik-Parametervektor mit Zusammenfassung mit Bein-Dynamikparametern</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L3467" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Alle Eintr\303\244ge des Minimalparametervektors, die jetzt Null sind, entfernen</Font></Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3478" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion15" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">ParamvecNew := Matrix(RowDimension(Paramvec3), 1): # Initialisierung mit maximaler Gr\303\266\303\237e
if regressor_modus = &quot;regressor_minpar&quot; then
  k := 0:
  for j from 1 to RowDimension(Paramvec3) do
    if not Paramvec3(j,1) = 0 then
      k := k + 1:
      ParamvecNew(k,1) := Paramvec3(j,1):
    end if:
  end do:
  # Neuen Parametervektor f\303\274r die Beinsegmenten (ohne Plattform)
  ParamvecNew := ParamvecNew(1..k,1):
else
  ParamvecNew := Paramvec3:
end if:</EC-CodeEditor></CodeEditor-ExecGroup>
<Group labelreference="L3160" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Dupliziere alle berechneten Matrizen. i steht f\303\274r den Index des jeweiligen Beines</Font></Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3428" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion11" expanded="true" visible="true" pixel-width="1232" pixel-height="523" code-language="text/maple" autofit="false" wrapping="true" show-border="true" code-line-numbers="true">tauReg := tau_regressor_s(7..NQ,..):
#MatrixEnd := index_symmat2vec(NQJ_parallel,NQJ_parallel,NQJ_parallel):
#MMjjReg := MMjj_regressor_s(1..MatrixEnd,..):
tauMMReg := tauMM_regressor_s(7..NQ,..):
for i to NQ do 
  tauMMReg := subs({qD_s(i, 1) = 0}, tauMMReg):
end do:
tauCReg := tauC_regressor_s(7..NQ,..):
taugReg := taug_regressor_s(7..NQ,..):

# Regressor aus Berechnung f\303\274r serielle Beinketten. Dort erste sechs Eintr\303\244ge f\303\274r Basis
g := &lt;g1;g2;g3&gt;:
tmp := &lt;tmp1;tmp2;tmp3&gt;:
Rmat := Transpose(parse(sprintf(&quot;eul%s2r&quot;,angleConvLeg))(frame_A_i(1..3,1))):
gtmp := Rmat.g:
for i to NQJ_parallel do
  for k to ColumnDimension(tauReg) do
    for j to 3 do 
      tauReg(i,k) := subs({g(j)=tmp(j)},tauReg(i,k)):
      taugReg(i,k) := subs({g(j)=tmp(j)},taugReg(i,k)):
    end do:
    for j to 3 do 
      tauReg(i,k) := subs({tmp(j)=gtmp(j)},tauReg(i,k)):
      taugReg(i,k) := subs({tmp(j)=gtmp(j)},taugReg(i,k)):
    end do:
  end do:
end do:</EC-CodeEditor>
<Input><Text-field prompt="&gt; " style="Maple Input" spaceabove="0" linebreak="space" rightmargin="0" linespacing="0.0" initial="0" firstindent="0" leftmargin="0" bulletsuffix="" alignment="left" bullet="none" spacebelow="0" pagebreak-before="false"></Text-field>
</Input></CodeEditor-ExecGroup>
<Group hide-input="false" labelreference="L3326" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3432" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion12" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">for i to N_LEGS do
  tau_regressor_s||i := Copy(tauReg):
  tauMM_regressor_s||i := Copy(tauMMReg):
  #MMjj_regressor_s||i := Copy(MMjjReg):
  tauC_regressor_s||i := Copy(tauCReg):
  taug_regressor_s||i := Copy(taugReg):
end do:
COLUMNreg := ColumnDimension(tau_regressor_s):</EC-CodeEditor></CodeEditor-ExecGroup>
<Group hide-input="false" labelreference="L3276" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group>
<Group labelreference="L3180" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Substituiere in jeder Matrix den Winkel Alpha (Verdrehung in der Basis) und die Gelenkkoordinaten und -geschwindigkeiten</Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3164" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion0" expanded="true" visible="true" pixel-width="1282" pixel-height="524" code-language="text/maple" autofit="true" wrapping="false" show-border="true" code-line-numbers="true">for k from 1 by 1 to N_LEGS do
  for i to NQJ_parallel do
    for j to COLUMNreg do
      for p from NQJ_parallel+1 to NQJ do
        tau_regressor_s||k(i,j)   := subs({qJDD||p||s=0,qJD||p||s=0,qJ||p||s=0},tau_regressor_s||k(i,j)):
        tauMM_regressor_s||k(i,j) := subs({qJDD||p||s=0,qJD||p||s=0,qJ||p||s=0},tauMM_regressor_s||k(i,j)):
        tauC_regressor_s||k(i,j)  := subs({qJDD||p||s=0,qJD||p||s=0,qJ||p||s=0},tauC_regressor_s||k(i,j)):
        taug_regressor_s||k(i,j)  := subs({qJDD||p||s=0,qJD||p||s=0,qJ||p||s=0},taug_regressor_s||k(i,j)):
      end do:
      for l to 3 do
        tau_regressor_s||k(i,j)   := subs({frame_A_i(l,1)=frame_A_i(l,k)},tau_regressor_s||k(i,j)):
        tauMM_regressor_s||k(i,j) := subs({frame_A_i(l,1)=frame_A_i(l,k)},tauMM_regressor_s||k(i,j)):
        tauC_regressor_s||k(i,j)  := subs({frame_A_i(l,1)=frame_A_i(l,k)},tauC_regressor_s||k(i,j)):
        taug_regressor_s||k(i,j)  := subs({frame_A_i(l,1)=frame_A_i(l,k)},taug_regressor_s||k(i,j)):
      end do:
      for m to NQJ_parallel do
        n := (m + (k-1)*NQJ_parallel):
        tau_regressor_s||k(i,j)   := subs({qJDD||m||s=qJDD||n||s,qJD||m||s=qJD||n||s,qJ||m||s=qJ||n||s},tau_regressor_s||k(i,j)):
        tauMM_regressor_s||k(i,j) := subs({qJDD||m||s=qJDD||n||s,qJD||m||s=qJD||n||s,qJ||m||s=qJ||n||s},tauMM_regressor_s||k(i,j)):
        tauC_regressor_s||k(i,j)  := subs({qJDD||m||s=qJDD||n||s,qJD||m||s=qJD||n||s,qJ||m||s=qJ||n||s},tauC_regressor_s||k(i,j)):
        taug_regressor_s||k(i,j)  := subs({qJDD||m||s=qJDD||n||s,qJD||m||s=qJD||n||s,qJ||m||s=qJ||n||s},taug_regressor_s||k(i,j)):
      end do:
    end do:
  end do:
end do:
</EC-CodeEditor></CodeEditor-ExecGroup>
<Group labelreference="L3598" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
</Section>
<Group hide-input="false" labelreference="L3206" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">printf(&quot;%s. Dynamik-Matrizen mit regressor_modus=%s bestimmt. Beginne Projektion/Addition<Font encoding="UTF-8">.\134n&quot;, FormatTime(&quot;%Y-%m-%d %H:%M:%S&quot;), </Font>regressor_modus):</Text-field>
</Input>
</Group>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Berechnung, Projektion und Addition der Dynamikgleichungen</Text-field></Title>
<Group labelreference="L3172" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Berechnung der Kr\303\244fte/Momente an den Gelenken der jeweiligen Beine und Projektion auf EE-Plattform</Font></Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3569" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion25" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">A_E := A_E:
U_i := U_i:
JBinv_i := JBinv_i:
for i to N_LEGS do
   PreMat :=  Transpose(U_i(..,..,i)).Transpose(JBinv_i(..,..,i)):
   if use_simplify&gt;=1 then
      tmp_t1:=time():
      tmp_l1 := length(PreMat):
      printf(&quot;%s. Beginne Vereinfachung: Projektionsmatrix Beinkette %d. L\303\244nge: %d.\134n&quot;, \134
        FormatTime(&quot;%Y-%m-%d %H:%M:%S&quot;), i, tmp_l1):
      PreMat := simplify2(PreMat):
      tmp_t2:=time():
      tmp_l2 := length(PreMat):
      printf(&quot;%s. Projektionsmatrix Beinkette %d vereinfacht. L\303\244nge: %d-&gt;%d. Rechenzeit %1.1fs.\134n&quot;, \134
        FormatTime(&quot;%Y-%m-%d %H:%M:%S&quot;), i, tmp_l1, tmp_l2, tmp_t2-tmp_t1):
   end if:
   A_||i   := PreMat . tau_regressor_s||i:
   Mreg_||i:= PreMat . tauMM_regressor_s||i:
   Creg_||i:= PreMat . tauC_regressor_s||i:
   greg_||i:= PreMat . taug_regressor_s||i:
end do:
</EC-CodeEditor></CodeEditor-ExecGroup>
<Group labelreference="L3145" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Aufsummieren aller Kr\303\244fte, projiziert auf EE-Plattform</Font></Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3571" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion26" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">Tmp := 0:
TmpM := 0:
TmpC := 0:
Tmpg := 0:
for i to N_LEGS do
  Tmp := Tmp + A_||i:
  TmpM := TmpM + Mreg_||i:
  TmpC := TmpC + Creg_||i:
  Tmpg := Tmpg + greg_||i:
end do:
A_j := Tmp:
Mreg_j := TmpM:
Creg_j := TmpC:
greg_j := Tmpg:
</EC-CodeEditor></CodeEditor-ExecGroup>
<Group labelreference="L3142" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Addiere Inverse Dynamik der Plattform</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L3421" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">ROWS := RowDimension(ParamvecNew):</Text-field>
</Input>
</Group>
<Group labelreference="L3436" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group>
<Group labelreference="L3438" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Neuer Parametervektor f\303\274r Beine und Plattform</Font></Text-field>
</Input>
</Group>
<Group labelreference="L3654" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">if regressor_modus = &quot;regressor_minpar&quot; then
  paramMin := &lt;ParamvecNew;paramVecP&gt;: # TODO: Hier stand vorher <Font encoding="UTF-8">paramVecP_M. Damit war die Regressorform aber nicht f\303\274r alle Systeme konsistent. Jetzt ist die parameterlineare Form aber nicht mehr so stark zusammengefasst, wie sie es sein k\303\266nnte.
</Font>else
<Font encoding="UTF-8">  # Benutze den generischen Parametervektor (ohne durch Benutzer modifizierte Eintr\303\244ge).
</Font>  paramMin := &lt;ParamvecNew; PV2_Plf_vec&gt;: # paramVecP oder <Font encoding="UTF-8">PV2_Plf_vec ist hier wahrscheinlich egal. F\303\274r Export ganz unten wird das neu gemacht.</Font>
end if:</Text-field>
</Input>
</Group>
<Group labelreference="L3439" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
<Group labelreference="L3440" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Regressormatrix zusammenstellen</Text-field>
</Input>
</Group>
<Group labelreference="L3437" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">A := pivotMat.&lt;A_j(1..6,1..ROWS)|A_E&gt;:
Mreg := pivotMat.&lt;Mreg_j(1..6,1..ROWS)|M_regmin&gt;:
Creg := pivotMat.&lt;Creg_j(1..6,1..ROWS)|c_regmin&gt;:
greg := pivotMat.&lt;greg_j(1..6,1..ROWS)|g_regmin&gt;:
NotNullEntries := 0:</Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3387" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion1" expanded="true" visible="true" pixel-width="1360" pixel-height="111" code-language="text/maple" autofit="true" wrapping="false" show-border="true" code-line-numbers="true">if regressor_modus = &quot;regressor_minpar&quot; then
  for i to RowDimension(paramMin) do
    if not(paramMin(i,1) = 0 or Equal(Column(A,i), ZeroVector[column](RowDimension(A)))) then
      NotNullEntries := NotNullEntries + 1:
     end if:
  end do:
else
  NotNullEntries := RowDimension(paramMin)-(NQJ-NQJ_parallel)*10:
end if:</EC-CodeEditor></CodeEditor-ExecGroup>
<Group hide-input="false" labelreference="L3484" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font encoding="UTF-8">printf(&quot;%s. Dimension des Regressors f\303\274r regressor_modus=%s bestimmt: %d\134n&quot;</Font>, FormatTime(&quot;%Y-%m-%d %H:%M:%S&quot;), regressor_modus, NotNullEntries):</Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3388" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion2" expanded="true" visible="true" pixel-width="862" pixel-height="264" code-language="text/maple" autofit="true" wrapping="false" show-border="true" code-line-numbers="true">paramMinRed := Matrix(NotNullEntries,1):
ARed := Matrix(RowDimension(A),NotNullEntries):
MregRed := Matrix(RowDimension(A),NotNullEntries):
CregRed := Matrix(RowDimension(A),NotNullEntries):
gregRed := Matrix(RowDimension(A),NotNullEntries):
j := 1:
for i to RowDimension(paramMin) do
  use_line := false: # bei true: Zeile \303\274bernehmen
  if regressor_modus = &quot;regressor&quot; and (i &lt;= 10*NQJ_parallel or i &gt;10*(NL-1)) then
    # bei normalem Regressor nur die Zeilen auslassen, die zu den Koppelgelenk-Dynamikparametern (Variable NQJ_parallel) geh\303\266ren. 
    # Zeilen zu Plattform-Parametern (letzte 10) m\303\274ssen an gleicher Stelle bleiben
    use_line := true:
  elif regressor_modus = &quot;regressor_minpar&quot; and not(paramMin(i,1) = 0 or Equal(Column(A,i), ZeroVector[column](RowDimension(A)))) then
    # bei Minimalparameter-Regressor alle Zeilen auslassen, in denen der Parameter zu Null markiert ist, oder wo die Matrix-Spalte Null ist
    use_line := true:
  end if:
  # Pr\303\274fe Sonderfall, dass durch eingegebene Symmetrien Parameter mehrfach vorkommen. Die Regressormatrix ist trotzdem unabh\303\244ngig
  if regressor_modus = &quot;regressor_minpar&quot; and use_line then
    for ii from 1 to j do # gehe alle belegte Dimensionen von paramMinRed durch
      if paramMin(i,1) = paramMinRed(ii,1) then
        # Parameter steht mehrfach im MPV. Ziehe beide Zeilen zusammen und entferne die Zeile im Parametervektor
        printf(&quot;Parameter %s steht mehrfach in MPV. Fasse Spalten zusammen.\134n&quot;, convert(paramMin(i,1), string)):
        for k to RowDimension(A) do # Gehe alle Zeilen durch und addiere jeweils die Spalte i auf die Spalte ii.
          ARed(k,ii) := ARed(k,ii) + A(k,i):
          MregRed(k,ii) := MregRed(k,ii) + Mreg(k,ii):
          CregRed(k,ii) := CregRed(k,ii) + Creg(k,ii):
          gregRed(k,ii) := gregRed(k,ii) + greg(k,ii):
        end do:
        use_line := false: # Die Spalte ist bereits eingef\303\274gt worden (zu der zum ersten Vorkommnis des Parameters)
        break:
      end if:
    end do:
  end if:
  if use_line then
    paramMinRed(j,1) := paramMin(i,1):
    for k to RowDimension(A) do
      ARed(k,j) := A(k,i):
      MregRed(k,j) := Mreg(k,i):
      CregRed(k,j) := Creg(k,i):
      gregRed(k,j) := greg(k,i):
    end do:
    j := j + 1:
  end if:
end do:
printf(&quot;Dynamik-Terme reduziert. Zeilenz\303\244hler j=%d\134n&quot;, j-1):
# Falls es doppelte Parameter (durch Symmetrien der Plattform) gibt, stehen am Ende des Parametervektors noch Nullen. Entferne diese.
paramMinRed := Matrix(paramMinRed(1..(j-1),1)):
ARed := ARed(.., 1..(j-1)):
MregRed := MregRed(.., 1..(j-1)):
CregRed := CregRed(.., 1..(j-1)):
gregRed := gregRed(.., 1..(j-1)):</EC-CodeEditor></CodeEditor-ExecGroup>
<Group hide-input="false" labelreference="L3630" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">if regressor_modus = &quot;regressor_minpar&quot; then
<Font encoding="UTF-8">  printf(&quot;Minimalparameter-Vektor:\134n&quot;):
</Font>  print(paramMinRed):
end if:</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L3316" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">printf(&quot;%s. Beginne Ersetzung der Geschwindigkeiten und Bestimmung der Plattform-Terme <Font encoding="UTF-8">f\303\274r</Font> regressor_modus=%s<Font encoding="UTF-8">.\134n&quot;, FormatTime(&quot;%Y-%m-%d %H:%M:%S&quot;), </Font>regressor_modus):</Text-field>
</Input>
</Group>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Replace Joint Velocities</Text-field></Title>
<Group labelreference="L3224" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Substituiere die Gelenkgeschwindigkeiten \303\274ber H-, Ui- und JBi-Matrix mit EE-Geschwindikeiten</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L3306" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Tmp := 0:
Tmp2 := 0:</Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3435" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion13" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">for i to N_LEGS do
  Tmp := Multiply(H,xED_s):
  Tmp := Multiply(U_i(..,..,i),Tmp):
  z||i := Multiply(JBinv_i(..,..,i),Tmp):
  if use_simplify&gt;=1 then
    tmp_t1:=time():
    tmp_l1 := length(z||i):
    printf(&quot;%s. Beginne Vereinfachung: Projektionsmatrix z Beinkette %d. L\303\244nge: %d.\134n&quot;, \134
      FormatTime(&quot;%Y-%m-%d %H:%M:%S&quot;), i, tmp_l1):
    z||i := simplify2(z||i):
    tmp_t2:=time():
    tmp_l2 := length(z||i):
    printf(&quot;%s. Projektionsmatrix z Beinkette %d vereinfacht. L\303\244nge: %d-&gt;%d. Rechenzeit %1.1fs.\134n&quot;, \134
      FormatTime(&quot;%Y-%m-%d %H:%M:%S&quot;), i, tmp_l1, tmp_l2, tmp_t2-tmp_t1):
  end if:
  Tmp2 := JBinv_i(..,..,i).(Multiply(U_i(..,..,i),H).xEDD_s+Multiply(U_i(..,..,i),dH).xED_s+Multiply(UD_i(..,..,i),H).xED_s):
  A||i := Multiply(JBinv_i(..,..,i),JBD_i(..,..,i)):
  if use_simplify&gt;=1 then
    tmp_t1:=time():
    tmp_l1 := length(A||i):
    printf(&quot;%s. Beginne Vereinfachung: Projektionsmatrix A Beinkette %d. L\303\244nge: %d.\134n&quot;, \134
      FormatTime(&quot;%Y-%m-%d %H:%M:%S&quot;), i, tmp_l1):
    A||i := simplify2(A||i):
    tmp_t2:=time():
    tmp_l2 := length(A||i):
    printf(&quot;%s. Projektionsmatrix A Beinkette %d vereinfacht. L\303\244nge: %d-&gt;%d. Rechenzeit %1.1fs.\134n&quot;, \134
      FormatTime(&quot;%Y-%m-%d %H:%M:%S&quot;), i, tmp_l1, tmp_l2, tmp_t2-tmp_t1):
  end if:
  B||i := Multiply(A||i,Matrix(qJD_i_s(..,i))):
  C||i := Tmp2 - B||i:
end do:</EC-CodeEditor></CodeEditor-ExecGroup>
<Group hide-input="false" labelreference="L3292" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Pr\303\274fe ob Ersetzung plausibel ist</Font></Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3626" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion34" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">for i to N_LEGS do
  for j to RowDimension(z||i) do
    for k to ColumnDimension(z||i) do
    	 from l to RowDimension(qJD_i_s) do
        if diff(z||i(j,k), qJD_i_s(l,i)) &lt;&gt; 0 then
          printf(&quot;Fehler bei Substitution der Geschwindigkeiten: z%d(%d,%d) enth\303\244lt %s\134n&quot;, i, j, k, qJD_i_s(l,i)):
        end if:
      end do:
    end do:
  end do:
end do:</EC-CodeEditor></CodeEditor-ExecGroup>
<Group hide-input="false" labelreference="L3310" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RowParamMin := RowDimension(paramMinRed):
MtoC := copy(MregRed):</Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L7" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion3" expanded="true" visible="true" pixel-width="617" pixel-height="524" code-language="text/maple" autofit="true" wrapping="false" show-border="true" code-line-numbers="true">for i to NX do
  for k to RowParamMin do
    for j to N_LEGS do
      for l to NQJ_parallel do
        ARed(i,k) := subs({qJDD_i_s(l,j)=C||j(l)},ARed(i,k)):
        MregRed(i,k) := subs({qJDD_i_s(l,j)=C||j(l)},MregRed(i,k)):
        MtoC(i,k) := subs({qJDD_i_s(l,j)=C||j(l)},MtoC(i,k)):
      end do:
    end do:
    for j to N_LEGS do
      for l to NQJ_parallel do
        ARed(i,k) := subs({qJD_i_s(l,j)=z||j(l)},ARed(i,k)):
        MregRed(i,k) := subs({qJD_i_s(l,j)=z||j(l)},MregRed(i,k)):
        MtoC(i,k) := subs({qJD_i_s(l,j)=z||j(l)},MtoC(i,k)):
        CregRed(i,k) := subs({qJD_i_s(l,j)=z||j(l)},CregRed(i,k)):
      end do:
    end do:
    for j to N_LEGS do
      for l to 6 do
        MregRed(i,k) := subs({xED_s(l,1)=0},MregRed(i,k)):
        MtoC(i,k) := subs({xEDD_s(l,1)=0},MtoC(i,k)):
      end do:
    end do:
  end do:
end do:
CregRed := CregRed+MtoC:</EC-CodeEditor></CodeEditor-ExecGroup>
<Group labelreference="L3615" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Pr\303\274fe Ergebnis auf Plausibilit\303\244t</Font></Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3617" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion33" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">for i to NX do
  for k to RowParamMin do
    for j to N_LEGS do
      for l to NQJ_parallel do
        if diff(ARed(i,k), qJD_i_s(l,j)) &lt;&gt; 0 then
          printf(&quot;Fehler bei Substitution der Geschwindigkeiten: Regressor (%d,%d) enth\303\244lt %s\134n&quot;, i, k, qJD_i_s(l,j)):
        end if:
        if diff(ARed(i,k), qJDD_i_s(l,j)) &lt;&gt; 0 then
          printf(&quot;Fehler bei Substitution der Geschwindigkeiten: Regressor (%d,%d) enth\303\244lt %s\134n&quot;, i, k, qJDD_i_s(l,j)):
        end if:
      end do:
    end do:
  end do:
end do:</EC-CodeEditor></CodeEditor-ExecGroup>
<Group hide-input="false" labelreference="L3386" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">tauGes := ARed:#.paramMinRed:</Text-field>
</Input>
</Group>
<Group labelreference="L3408" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Dynamik-Regressor in Plattform-Koordinaten (oben berechnet)</Text-field>
</Input>
</Group>
<Group labelreference="L3407" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">tau_x := tauGes:</Text-field>
</Input>
</Group>
<Group labelreference="L3489" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Dynamik-Regressor in Antriebs-Koordinaten umrechnen. Nur machen, wenn die Jacobi-Matrix einfach genug ist.</Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L11" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion16" expanded="true" visible="true" pixel-width="1760" pixel-height="200" code-language="text/maple" autofit="true" wrapping="false" show-border="true" code-line-numbers="true">if RowDimension(Jinv) &lt; 5 and codeexport_actcoord then
  read sprintf(&quot;../codeexport/%s/tmp/jacobian_maple.m&quot;, robot_name): # Annahme, dass die Jacobi-Matrix (aus Invertierung) vorher berechnet wurde. Setzt aktuell das normale Dynamik-Skript voraus.
  J:=J: # Neudefinition, damit Variable im Workspace ist.
  tau_qa:=Transpose(J).tauGes:
  Mreg_qa:=Transpose(J).MregRed:
  Creg_qa:=Transpose(J).CregRed:
  greg_qa:=Transpose(J).gregRed:
end if:</EC-CodeEditor></CodeEditor-ExecGroup>
<Group labelreference="L3491" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
<Group labelreference="L3505" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Erzeuge Minimalkoordinatenvektor zur Erstellung der Massenmatrix durch Ableitungen im folgenden Schritt</Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L13" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion17" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="false" show-border="true" code-line-numbers="true">xEDD_s_dummy := Matrix(NX,1):
zaehler := 1:
for i to 6 do
  if not(xEDD_s(i) = 0) then
    xEDD_s_dummy(zaehler) := xEDD_s(i):
    zaehler := zaehler + 1:
  end if:
end do:
</EC-CodeEditor></CodeEditor-ExecGroup>
<Group labelreference="L3508" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Erzeugung der Massenmatrizen</Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L15" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion18" expanded="true" visible="true" pixel-width="1049" pixel-height="324" code-language="text/maple" autofit="true" wrapping="false" show-border="true" code-line-numbers="true">MMregRed := Matrix(NX*NX, RowDimension(paramMinRed)):
MMreg_qa := Matrix(NX*NX, RowDimension(paramMinRed)):
i_rr := 0:
for i to NX do # Zeilenindex der Massenmatrix
  for j to NX do  # Spaltenindex der Massenmatrix
    #if j &gt; i then
    #  next: # rechte obere Seite der symmetrischen Matrix. Keine neue Information. Nicht berechnen oder speichern.
    #end if:
    i_rr := i_rr + 1: # Gehe zeilenweise durch den unteren linken Teil der Massenmatrix (inkl. Diagonale)
    for k to RowDimension(paramMinRed) do # Spaltenindex der Regressormatrix
      MMregRed[i_rr, k] := diff(MregRed[i, k], xEDD_s_dummy[j, 1]):
      MMreg_qa[i_rr, k] := diff(Mreg_qa[i, k], xEDD_s_dummy[j, 1]):
    end do:
  end do:
end do:
</EC-CodeEditor></CodeEditor-ExecGroup>
<Group labelreference="L3512" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Dynamik in Plattform-Koordinaten (oben berechnet)</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L3511" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">tau_x := ARed:
MMreg_x := MMregRed:
Creg_x := CregRed:
greg_x := gregRed:</Text-field>
</Input>
</Group>
<Group labelreference="L3618" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
<Group labelreference="L3627" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">PKM-Dynamik-Funktionen mit MPV bereits eingesetzt</Text-field></Title>
<Group labelreference="L3518" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Erzeuge MPV-Vektor</Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L14" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion19" expanded="true" visible="true" pixel-width="800" pixel-height="158" code-language="text/maple" autofit="false" wrapping="false" show-border="true" code-line-numbers="true">if regressor_modus = &quot;regressor_minpar&quot; then
  nMDP := RowDimension(paramMinRed):
  PV := Matrix(nMDP,1):
  for i from 1 to nMDP do
    PV(i,1) := parse(sprintf(&quot;MDP%d%&quot;, i)):
  end do:
end if:</EC-CodeEditor></CodeEditor-ExecGroup>
<Group labelreference="L3549" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3551" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion21" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">if regressor_modus = &quot;regressor_minpar&quot; then
  tau_x_mdp := tau_x.PV:
  MMreg_x_mdp := MMreg_x.PV:
  Creg_x_mdp := Creg_x.PV:
  greg_x_mdp := greg_x.PV:

  tau_qa_mdp := tau_qa.PV:
  MMreg_qa_mdp := MMreg_qa.PV:
  Creg_qa_mdp := Creg_qa.PV:
  greg_qa_mdp := greg_qa.PV:
end if:</EC-CodeEditor></CodeEditor-ExecGroup>
<Group labelreference="L3552" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Maple-Export</Text-field></Title>
<Group labelreference="L3534" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Zum Export als Matlab-Funktion \303\274ber ein anderes Arbeitsblatt</Font></Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3555" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion22" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">save tau_x,   sprintf(&quot;../codeexport/%s/tmp/invdyn_para_plfcoord_%s_maple.m&quot;,      robot_name, regressor_modus):
save MMreg_x, sprintf(&quot;../codeexport/%s/tmp/invdyn_para_plfcoord_MM_%s_maple.m&quot;,   robot_name, regressor_modus):
save Creg_x,  sprintf(&quot;../codeexport/%s/tmp/invdyn_para_plfcoord_tauC_%s_maple.m&quot;, robot_name, regressor_modus):
save greg_x,  sprintf(&quot;../codeexport/%s/tmp/invdyn_para_plfcoord_taug_%s_maple.m&quot;, robot_name, regressor_modus):
</EC-CodeEditor></CodeEditor-ExecGroup>
<Group labelreference="L3536" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Maple- und Matlab-Export des MPV</Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3416" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion10" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">if regressor_modus = &quot;regressor_minpar&quot; then
  save paramMinRed, sprintf(&quot;../codeexport/%s/tmp/minimal_parameter_parrob_maple.m&quot;, robot_name):
  save RowParamMin, sprintf(&quot;../codeexport/%s/tmp/RowMinPar_parallel_maple.m&quot;,       robot_name):
  MatlabExport(paramMinRed, sprintf(&quot;../codeexport/%s/tmp/minimal_parameter_parrob_matlab.m&quot;, robot_name), codegen_opt):
  MatlabExport(RowParamMin, sprintf(&quot;../codeexport/%s/tmp/RowMinPar_parallel.m&quot;, robot_name), 2);
else
  paramRed := Matrix(&lt;Paramvec2[1..NQJ_parallel*10,1], PV2_Plf_vec&gt;): # Umbenennung, damit es beim erneuten Laden als Inertialparameter-Variable erkennbar ist
  save paramRed, sprintf(&quot;../codeexport/%s/tmp/inertial_parameter_parrob_maple.m&quot;, robot_name):
end if:</EC-CodeEditor></CodeEditor-ExecGroup>
<Group labelreference="L3525" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">PKM-Dynamik-Funktionen mit MPV bereits eingesetzt</Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" labelreference="L3563" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion24" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">if regressor_modus = &quot;regressor_minpar&quot; then
  save tau_x_mdp,   sprintf(&quot;../codeexport/%s/tmp/invdyn_para_plfcoord_reg_mdp_maple.m&quot;,     robot_name):
  save MMreg_x_mdp, sprintf(&quot;../codeexport/%s/tmp/invdyn_para_plfcoord_MMreg_mdp_maple.m&quot;,   robot_name):
  save Creg_x_mdp,  sprintf(&quot;../codeexport/%s/tmp/invdyn_para_plfcoord_tauCreg_mdp_maple.m&quot;, robot_name):
  save greg_x_mdp,  sprintf(&quot;../codeexport/%s/tmp/invdyn_para_plfcoord_taugreg_mdp_maple.m&quot;, robot_name):
end if:</EC-CodeEditor></CodeEditor-ExecGroup>
<Group labelreference="L3644" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
</Section>
</Worksheet>